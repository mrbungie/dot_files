# ~/.bashrc: executed by bash for non-login shells

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

# Source common shell settings
if [ -f "$HOME/.shellrc" ]; then
    source "$HOME/.shellrc"
fi

# Source aliases
if [ -f "$HOME/.aliases" ]; then
    source "$HOME/.aliases"
fi

# Linux-specific aliases
alias apt-update="sudo apt-get update && sudo apt-get upgrade"
alias apt-install="sudo apt-get install"
alias apt-remove="sudo apt-get remove"
alias apt-search="apt-cache search"
alias open="xdg-open"
alias pbcopy="xclip -selection clipboard"
alias pbpaste="xclip -selection clipboard -o"

# Set up dircolors if available
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi

# Enable programmable completion features
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Set up fzf if installed
if [ -f ~/.fzf.bash ]; then
    source ~/.fzf.bash
fi

# Set up thefuck if installed
if command -v thefuck >/dev/null 2>&1; then
    eval "$(thefuck --alias)"
fi

# Set up z jump if installed
if [ -f ~/z.sh ]; then
    source ~/z.sh
fi

# Set up nvm if installed
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Set up pyenv if installed
if command -v pyenv >/dev/null 2>&1; then
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)" 2>/dev/null || true
fi

# Set up rbenv if installed
if command -v rbenv >/dev/null 2>&1; then
    eval "$(rbenv init -)"
fi

# Set up cargo if installed
if [ -f "$HOME/.cargo/env" ]; then
    source "$HOME/.cargo/env"
fi

# Set up local bin directory
if [ -d "$HOME/.local/bin" ]; then
    export PATH="$HOME/.local/bin:$PATH"
fi

# Set up snap if installed
if [ -d "/snap/bin" ]; then
    export PATH="/snap/bin:$PATH"
fi

# Set up flatpak if installed
if [ -d "/var/lib/flatpak/exports/bin" ]; then
    export PATH="/var/lib/flatpak/exports/bin:$PATH"
fi

# Set up Go if installed
if [ -d "/usr/local/go/bin" ]; then
    export PATH="/usr/local/go/bin:$PATH"
fi
if [ -d "$HOME/go/bin" ]; then
    export PATH="$HOME/go/bin:$PATH"
fi

# Set up Rust if installed
if [ -d "$HOME/.cargo/bin" ]; then
    export PATH="$HOME/.cargo/bin:$PATH"
fi

# Set up Android SDK if installed
if [ -d "$HOME/Android/Sdk" ]; then
    export ANDROID_HOME="$HOME/Android/Sdk"
    export PATH="$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH"
fi

# Set up Flutter if installed
if [ -d "$HOME/flutter/bin" ]; then
    export PATH="$HOME/flutter/bin:$PATH"
fi

# Load local settings that shouldn't be in git
if [ -f "$HOME/.localrc" ]; then
    source "$HOME/.localrc"
fi 